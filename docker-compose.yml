version: "3.8"

volumes:
  db_volume:

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - ./db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - connexion
    env_file:
      - .env
    restart: always

  back:
    container_name: backend
    build: ./backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
    networks:
      - connexion
    healthcheck:
        test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health/ || exit 1"]
        interval: 10s
        timeout: 5s
        retries: 5
    restart: always

  front:
    container_name: front
    build:
      context: ./front
    ports:
      - "5173:5173"
    networks:
      - connexion
    volumes:
      - ./front:/app
      - /app/node_modules
    depends_on:
      back :
        condition: service_healthy
    restart: always
networks:
  connexion:
    driver: bridge