# version: '3.8'
# services:
#   backend:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     command: 'python manage.py runserver 0.0.0.0:8000'
#     ports:
#       - 8000:8000
#     volumes:
#       - .:/app
#     depends_on:
#       - db

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile 
#     command: 'npm run dev'
#     ports:
#       - 3000:3000
#     volumes:
#       - ./frontend:/app
#     depends_on:
#       - backend

#   db:
#     image: postgres:13
#     restart: always
#     environment:
#       MYSQL_DATABASE: admin
#       MYSQL_USER: root
#       MYSQL_PASSWORD: root
#       MYSQL_ROOT_PASSWORD: root
#     volumes:
#       - .dbdata:/var/lib/mysql
#     ports:
#       - 5432:5432
    # frontend:
    #   container_name: frontend
    #   build:
    #     context: ./frontend
    #   ports:
    #     - "3000:3000"
    #   # networks:
    #   #   - pinger_network
    #   volumes:
    #     - ./frontend:/app
# networks:
#   pinger_network:
#   driver: bridge
  #   depends_on:
  #     - db
  # db:
  #   image: postgres:13
  #   restart: always
  #   environment:
  #     POSTGRES_DB: admin
  #     POSTGRES_USER: root
  #     POSTGRES_PASSWORD: root
  #   volumes:
  #     - .dbdata:/var/lib/postgresql/data
  #   ports:
  #     - 5432:5432

  
version: '3.8'

services:
  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: admin
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - .dbdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
  
  backend:
    build:
      context: ./backend  # Pointing to the backend directory
      dockerfile: Dockerfile  # The Dockerfile in the backend directory
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - db