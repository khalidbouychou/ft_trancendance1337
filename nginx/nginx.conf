# Include MIME types for content recognition
include mime.types;
default_type application/octet-stream;

server {
    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl.crt;
    ssl_certificate_key /etc/nginx/ssl.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    server_name your_domain_or_IP_here;

    # Serve static images from /var/www/images directory
    location /uploads/ {
        alias /var/www/uploads/;
        autoindex on; # Optional: lists directory contents if accessed directly
        expires off;  # Disables caching for images (optional)
    }

    # Proxy requests to the frontend
    location / {
        proxy_pass http://front:5173;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires 0;
    }

    # Proxy requests to the backend API
    location /api/ {
        proxy_pass http://back:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Uncomment these lines if WebSocket support is needed
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
    }
}

# Optional: Add an HTTP redirect to HTTPS if needed
server {
    listen 80;
    server_name 127.0.0.1;
    return 301 https://$host$request_uri;
}
